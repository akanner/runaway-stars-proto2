# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
  # default configuration for services in *this* file
  _defaults:
      autowire: true
      autoconfigure: true
      public: false

  # makes classes in src/AppBundle available to be used as services
  AppBundle\:
      resource: '../../*'
      # you can exclude directories or files
      # but if a service is unused, it's removed anyway
      exclude: '../../{Entity}'
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
#repositories
  AppBundle\Repositories\ImageRepository:
    factory: doctrine.orm.entity_manager:getRepository
    factory_method: getRepository
    arguments: [AppBundle\Entity\Image]  

  AppBundle\Repositories\GamificationTypeRepository:
    factory: 'doctrine.orm.entity_manager:getRepository'
    arguments: [AppBundle\Entity\GamificationType]

  AppBundle\repositories\AnswerPointsRepository:
    factory: doctrine.orm.entity_manager:getRepository
    arguments: [AppBundle\Entity\AnswerPoints]

  AppBundle\repositories\ParticipantRepository:
    factory: doctrine.orm.entity_manager:getRepository
    arguments: [AppBundle\Entity\Participant]

  AppBundle\repositories\ParticipantResponseRepository:
    factory: doctrine.orm.entity_manager:getRepository
    arguments: [AppBundle\Entity\ParticipantResponse]

  AppBundle\repositories\TrainingRepository:
    factory: doctrine.orm.entity_manager:getRepository
    arguments: [AppBundle\Entity\TrainingTask]

  AppBundle\repositories\ParticipantSessionRepository:
    factory: doctrine.orm.entity_manager:getRepository
    arguments: [AppBundle\Entity\ParticipantSession]

  AppBundle\repostories\AppParameterRepository:
    factory: doctrine.orm.entity_manager:getRepository
    arguments: [AppBundle\Entity\AppParameter]

  #doctrine extensions
  gedmo.listener.timestampable:
      class: Gedmo\Timestampable\TimestampableListener
      tags:
          - { name: doctrine.event_subscriber, connection: default }
      calls:
          - [ setAnnotationReader, [ "@annotation_reader" ] ]
